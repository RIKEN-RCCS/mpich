--- src/mpi/coll/scatter/scatter_intra_binomial.c
+++ src/mpi/coll/scatter/scatter_intra_binomial.c
@@ -33,10 +33,20 @@ int MPIR_Scatter_intra_binomial(const void *sendbuf, int sendcount, MPI_Datatype
     MPI_Status status;
     MPI_Aint extent = 0;
     int rank, comm_size, sendtype_size;
+#define TOFU
+#ifdef TOFU
+    int relative_rank;
+    MPI_Aint nbytes;
+#else
     int relative_rank, nbytes;
+#endif
     MPI_Aint curr_cnt, send_subtree_cnt;
     int mask, recvtype_size = 0, src, dst;
+#ifdef TOFU
+    MPI_Aint tmp_buf_size = 0;
+#else
     int tmp_buf_size = 0;
+#endif
     void *tmp_buf = NULL;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -59,10 +69,18 @@ int MPIR_Scatter_intra_binomial(const void *sendbuf, int sendcount, MPI_Datatype
          * in the event of recvbuf=MPI_IN_PLACE on the root,
          * recvcount and recvtype are not valid */
         MPIR_Datatype_get_size_macro(sendtype, sendtype_size);
+#ifdef TOFU
+        nbytes = (MPI_Aint) sendtype_size * sendcount;
+#else
         nbytes = sendtype_size * sendcount;
+#endif
     } else {
         MPIR_Datatype_get_size_macro(recvtype, recvtype_size);
+#ifdef TOFU
+        nbytes = (MPI_Aint) recvtype_size * recvcount;
+#else
         nbytes = recvtype_size * recvcount;
+#endif
     }
 
     curr_cnt = 0;
